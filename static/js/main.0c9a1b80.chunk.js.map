{"version":3,"sources":["ReverseIndex.js","App.js","reportWebVitals.js","index.js"],"names":["stem","require","PorterStemmer","sum","arr","ret","i","length","ReverseIndex","data","search","queryText","numResults","index","numDocs","titles","urls","results","Set","replace","split","map","x","undefined","agg","forEach","res","idf","Math","log","tf","final","Object","entries","score","title","url","sort","a","b","slice","assign","this","App","props","onChange","e","setState","currentTerms","target","value","render","state","reverseIndex","className","style","backgroundColor","opacity","width","fontSize","textAlign","type","onClick","window","open","Search","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6OAAMA,EAAOC,EAAQ,IAAWC,cAAcF,KAGxCG,EAAM,SAACC,GAET,IADA,IAAIC,EAAM,EACDC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC5BD,GAAOD,EAAIE,GAEf,OAAOD,GAiCIG,EA7Bb,WAAYC,GAAO,IAAD,gCAIlBC,OAAS,SAACC,GAAgC,IAArBC,EAAoB,wDAAN,EAC1BC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC3BC,EAAU,YAAI,IAAIC,IAAIP,EAAUQ,QAAQ,KAAM,IAAIC,MAAM,OACzDC,KAAI,SAAAC,GAAC,OAAIT,EAAMb,EAAKsB,OACpBD,KAAI,SAAAC,GAAC,YAAUC,IAAND,EAAkB,GAAKA,KAE/BE,EAAM,GACVP,EAAQQ,SAAQ,SAAAC,GACd,IAAIC,EAAMC,KAAKC,IAAIf,EAAUY,EAAInB,QACjCmB,EAAID,SAAQ,YAAkB,IAAD,mBAAfZ,EAAe,KAARiB,EAAQ,KAE3BN,EAAIX,GAAJ,uBAAqB,OAAHW,QAAG,IAAHA,OAAA,EAAAA,EAAMX,KAAU,IAAlC,CAAuCiB,EAAGH,UAK9C,IAAII,EAAQC,OAAOC,QAAQT,GACxBH,KAAI,mCAAEf,EAAF,KAAK4B,EAAL,WACF,CAACC,MAAOpB,EAAOT,GAAI4B,MAAO/B,EAAI+B,GAAQE,IAAKpB,EAAKV,OACjD+B,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAEL,MAAQI,EAAEJ,SAE9B,OAAOH,EAAMS,MAAM,EAAG5B,IAxBtBoB,OAAOS,OAAOC,KAAMjC,IC6CTkC,E,kDAxCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,SAAW,SAACC,GAAD,OAAO,EACfC,SAAS,CAACC,aAAcF,EAAEG,OAAOC,SATjB,EAWnBC,OAAS,WAAO,IACNH,EAAiB,EAAKI,MAAtBJ,aADK,iBAELH,EAFK,EAELA,SACJ5B,GAHS,EAEKoC,aACJ,EAAKA,aAAa3C,OAAOsC,GAAgB,GAAI,IAC3D,OACE,qBAAKM,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKC,MAAO,CAACC,gBAAgB,OAAQC,QAAQ,QAA7C,UACE,mDACA,mCACA,uBAAOF,MAAO,CAACG,MAAO,QAASC,SAAS,OAAQC,UAAU,UAAWC,KAAK,OAAOhB,SAAUA,IACvE,IAAnB5B,EAAQV,QAAgB,uBAAO+C,UAAU,UAAjB,SACvB,gCACGrC,EAAQI,KAAI,SAAAC,GAAC,OACZ,6BACE,oBAAIwC,QAAS,kBAAMC,OAAOC,KAAP,0CAA+C1C,EAAEc,IAAjD,YAAnB,mBACMd,EAAEa,MADR,aACkBb,EAAEY,MADpB,QADOZ,EAAEa,sBAvBzB,EAAKkB,aAAe,IAAI7C,EAAayD,GACrC,EAAKb,MAAQ,CACXJ,aAAc,IAJC,E,UADHkB,IAAMC,WCLTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS1B,OACP,cAAC,IAAM2B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.0c9a1b80.chunk.js","sourcesContent":["const stem = require('natural').PorterStemmer.stem\r\n\r\n\r\nconst sum = (arr) => {\r\n    let ret = 0\r\n    for (let i = 0; i < arr.length; i++) {\r\n        ret += arr[i]\r\n    }\r\n    return ret\r\n}\r\n\r\nclass ReverseIndex {\r\n  constructor(data) {\r\n    Object.assign(this, data)\r\n  }\r\n        \r\n  search = (queryText, numResults = -1) => {\r\n    const {index, numDocs, titles, urls} = this\r\n    let results = [...new Set(queryText.replace(/'/g, '').split(' '))]\r\n      .map(x => index[stem(x)])\r\n      .map(x => x === undefined ? [] : x)\r\n\r\n    let agg = {}\r\n    results.forEach(res => {\r\n      let idf = Math.log(numDocs / res.length)\r\n      res.forEach(([index, tf]) => {\r\n        // append to vector in case of other scoring mechanism\r\n        agg[index] = [...(agg?.[index] || []), tf*idf]\r\n      })\r\n    })\r\n\r\n    // reduce / summarize\r\n    let final = Object.entries(agg)\r\n      .map(([i, score]) =>\r\n        ({title: titles[i], score: sum(score), url: urls[i]})\r\n      ).sort((a,b) => b.score - a.score)\r\n\r\n    return final.slice(0, numResults)\r\n  }\r\n}\r\n\r\nexport default ReverseIndex","import './App.css'\nimport React, {Component} from 'react'\nimport Search from './reverse_index.json'\nimport ReverseIndex from './ReverseIndex.js'\n\n/*\nconst sum = (args) => args.reduce((a,b) => a+b)\nconst mean = (args) => sum(args) / args.length\nconst score = (args) => {\n    let m = mean(args)\n    let sse = -args\n        .map(x => Math.pow(x-m, 2)) \n        .reduce((a,c) => a+c)\n    return sse + sum(args)\n}\n*/\n\nclass App extends React.Component { \n  constructor(props) { \n    super(props)\n    this.reverseIndex = new ReverseIndex(Search)\n    this.state = {\n      currentTerms: '',\n    }\n  }\n\n  onChange = (e) => this\n    .setState({currentTerms: e.target.value})\n\n  render = () => { \n    const { currentTerms } = this.state\n    const { onChange, reverseIndex } = this\n    let results = this.reverseIndex.search(currentTerms || '', 7)\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div style={{backgroundColor:'none', opacity:'100%'}}>\n            <h1>Beau Index Search</h1>\n            <h1>?</h1>\n            <input style={{width: '600px', fontSize:'16pt', textAlign:'center'}} type='text' onChange={onChange}></input>\n            {results.length !== 0 && <table className='results'>\n              <tbody>\n                {results.map(x => \n                  <tr key={x.title}>\n                    <td onClick={() => window.open(`https://www.youtube.com/watch?v=${x.url}_blank`)}>\n                      {`${x.title} (${x.score})`}\n                    </td>\n                  </tr>)}\n              </tbody>\n            </table>\n            }\n          </div>\n        </header>\n      </div>\n    )\n  }\n            \n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
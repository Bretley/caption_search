{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["console","log","Object","keys","Search","top100","globalCount","search","autoComplete","App","props","onChange","e","setState","currentTerms","target","value","terms","state","results","Set","replace","split","filter","x","undefined","length","aggregates","forEach","title","count","url","hits","values","sort","a","b","complete","slice","cur","pref","children","ends","next","entries","v","v2","weight","concat","render","className","style","backgroundColor","opacity","width","fontSize","textAlign","type","map","onClick","window","open","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.930fed33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg'\nimport './App.css'\nimport React, {Component} from 'react'\nimport Search from './reverse_index.json'\n//const natural = require('natural') \n\nconsole.log(Object.keys(Search))\n\nlet top100 = Search.globalCount\nconsole.log('search', Search.search)\nconsole.log('autocomplete', Search.autoComplete)\nconsole.log('top results', top100)\n\nclass App extends React.Component { \n  constructor(props) { \n    super(props)\n    this.state = {\n      currentTerms: '',\n      search: Search.search,\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({currentTerms: e.target.value})\n  }\n\n  search = (terms) => {\n    const {search} = this.state\n    let results = [...new Set(terms.replace(/'/g, '').split(' '))]\n      //.map(x => search[natural.PorterStemmer.stem(x)])\n      .filter(x => x !== undefined)\n    // TODO: aggregate the results\n    console.log(results)\n    if (results !== undefined && results !== null) {\n    }\n    if (results.length !== 0) {\n      let aggregates = {}\n      results.forEach(x => {\n        x.forEach(({title, count, url}) => {\n          if (aggregates[title]) {\n            aggregates[title].count += count\n            aggregates[title].hits += 1\n          } else {\n            aggregates[title] = {title, count, hits:1, url}\n          }\n        })\n      })\n      results = Object.values(aggregates).sort((a, b) => \n        a.hits < b.hits ? 1\n        : a.hits > b.hits ? -1\n        : a.count < b.count ? 1\n        : a.count > b.count ? -1\n        : 0\n      )\n    }\n    return results\n  }\n\n  complete = (terms) => {\n    if (terms === undefined) {\n      return ''\n    }\n    terms = terms.split(' ').slice(-1).split('')\n    console.log('terms', terms)\n    let cur = Search.autoComplete\n    let pref = ''\n    terms.forEach(x => {cur = cur.children[x]; pref += x})\n    if (cur === undefined) {\n      return []\n    }\n    while (cur !== undefined && !cur.ends) {\n      let next = Object.entries(cur.children)\n        .sort(([k,v],[k2, v2]) => \n          v.weight > v2.weight ? -1\n          : v.weight < v2.weight ? 1\n          :0)[0]\n      cur = cur.children[next[0]]\n      pref = pref.concat(next[0])\n    }\n    return pref\n  }\n  \n  render = () => { \n    const {currentTerms, search} = this.state\n    const {onChange} = this\n    let results = currentTerms\n    let complete = ''\n    if (results === '') {\n      results = [] \n    } else {\n      results = this.search(currentTerms)\n    } //let complete =this.complete(currentTerms) let complete = '' console.log()\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div style={{backgroundColor:'none', opacity:'100%'}}>\n            <h1>Beau Index Search</h1>\n            <h1>?</h1>\n            <input style={{width: '600px', fontSize:'16pt', textAlign:'center'}} type='text' onChange={onChange}></input>\n            <div>{complete}</div>\n            {results.length !== 0 && <table className='results'>\n              <tbody>\n                {results.slice(0,7).map(x => \n                  <tr key={x.title}>\n                    <td onClick={() => window.open('https://www.youtube.com/watch?v=' + x.url, '_blank')}>\n                      {x.title}\n                    </td>\n                  </tr>)}\n              </tbody>\n            </table>\n            }\n          </div>\n        </header>\n      </div>\n    )\n  }\n            \n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}